plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.angcyo.android_gradle_dsl_700"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        def base = "C:\\Users\\Administrator\\.gradle\\wrapper\\dists\\gradle-7.0.2-all\\7era6s5ay7zsbhuvl0oc9g94s\\gradle-7.0.2\\src"
        main.java.srcDirs += [
                "${base}/core",
                "${base}/core-api",
                "${base}/base-services",
                "${base}/base-services-groovy",
                "${base}/logging",
                "${base}/plugins",
                "${base}/diagnostics",
                "${base}/ide-native",
        ]
    }

    //输出gradle版本
    println(gradle.gradleVersion) //7.0.2

    def apkFolder = new File(project.rootDir.absolutePath + "/apk")//rootProject.file("/apk")
    apkFolder.mkdirs()
    println "APK输出目录:${apkFolder.absolutePath}"

    println(it) //extension 'android'
    println(it.class) //class com.android.build.gradle.internal.dsl.BaseAppModuleExtension_Decorated
    com.android.build.gradle.internal.dsl.BaseAppModuleExtension //点击跳转到目标类, 查看可操作的成员对象

    //com.android.build.gradle.AbstractAppExtension.getApplicationVariants //操作对象
    applicationVariants.all { variant ->
        println(variant) //com.android.build.gradle.internal.api.ApplicationVariantImpl_Decorated@a10a2fd
        println(variant.class) //class com.android.build.gradle.internal.api.ApplicationVariantImpl_Decorated
        com.android.build.gradle.internal.api.ApplicationVariantImpl //点击跳转到目标类, 查看可操作的成员对象

        if (variant.buildType.name != "debug") {
            //com.android.build.gradle.internal.api.ApkVariantImpl.getPackageApplicationProvider //操作对象
            //com.android.build.gradle.tasks.PackageAndroidArtifact.getOutputDirectory //操作对象
            variant.packageApplicationProvider.get().outputDirectory = apkFolder
        }

        //com.android.build.gradle.api.BaseVariant.getOutputs 操作对象
        variant.outputs.forEach {
            println(it) //ApkVariantOutputImpl_Decorated{variantOutput=VariantOutputImpl(versionCode=property(java.lang.Integer, provider(class java.lang.Integer)), versionName=property(java.lang.String, provider(class java.lang.String)), enabled=property(java.lang.Boolean, fixed(class java.lang.Boolean, true)), variantOutputConfiguration=VariantOutputConfigurationImpl(isUniversal=false, filters=[]), baseName=release, fullName=release, outputFileName=property(java.lang.String, fixed(class java.lang.String, Android_Gradle_DSL_7.0.0-release-unsigned.apk)))}
            println(it.class) //class com.android.build.gradle.internal.api.ApkVariantOutputImpl_Decorated
            com.android.build.gradle.internal.api.ApkVariantOutputImpl //点击跳转到目标类, 查看可操作的成员对象

            //com.android.build.gradle.internal.api.BaseVariantOutputImpl.setOutputFileName 操作对象
            it.outputFileName = "demo.apk" //最终修改生成的apk文件名
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    def gradle = "C:\\Users\\Administrator\\.gradle\\caches\\modules-2\\files-2.1\\com.android.tools.build\\gradle\\7.0.0"
    implementation fileTree(dir: gradle, include: ["*.jar", "*\\*.jar"])

    def gradleApi = "C:\\Users\\Administrator\\.gradle\\caches\\modules-2\\files-2.1\\com.android.tools.build\\gradle-api\\7.0.0"
    implementation fileTree(dir: gradleApi, include: ["*.jar", "*\\*.jar"])
}